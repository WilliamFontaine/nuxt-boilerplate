name: Build, Push and Deploy Docker Image

on:
  push:
    tags: ['v*.*.*']

permissions:
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5.0.0

      - run: |
          if [ ! -d "prisma/migrations" ]; then
            echo "❌ No migrations found"
            exit 1
          fi
          echo "✅ Migrations found"

      - uses: docker/setup-buildx-action@v3.11.1
      - uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "REPO_OWNER_LOWER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - uses: docker/build-push-action@v6.18.0
        with:
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/${{ env.REPO_OWNER_LOWER }}/nuxt-boilerplate:${{ env.TAG_NAME }}
            ghcr.io/${{ env.REPO_OWNER_LOWER }}/nuxt-boilerplate:latest

  # Deploy the application to the production server
  deploy:
    needs: build-and-push # Only run if build succeeds
    runs-on: ubuntu-latest
    steps:
      # Extract repository owner (lowercase) for this job
      - name: Extract repository owner
        run: |
          echo "REPO_OWNER_LOWER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      # Connect to the server and deploy the new Docker container
      - name: Connect to server and deploy
        uses: appleboy/ssh-action@v1.2.2
        with:
          # SSH connection details (configured in repository secrets)
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          # Deployment script
          script: |
            set -e

            echo "🔄 Connecting to the server..."
            echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            echo "📥 Pulling the latest Docker image..."
            docker pull ghcr.io/${{ env.REPO_OWNER_LOWER }}/nuxt-boilerplate:latest

            echo "🛑 Stopping and removing the existing container..."
            docker stop nuxt-boilerplate || true
            docker rm nuxt-boilerplate || true

            echo "🔄 Running database migrations..."
            docker run --rm \
              --network nuxt-boilerplate_webnet \
              --env-file ~/nuxt-boilerplate/.env \
              ghcr.io/${{ env.REPO_OWNER_LOWER }}/nuxt-boilerplate:latest \
              npx prisma migrate deploy

            echo "🚀 Starting the new container..."
            docker run -d \
              --name nuxt-boilerplate \
              --restart unless-stopped \
              --network nuxt-boilerplate_webnet \
              --env-file ~/nuxt-boilerplate/.env \
              ghcr.io/${{ env.REPO_OWNER_LOWER }}/nuxt-boilerplate:latest

            echo "✅ Deployment completed successfully!"
