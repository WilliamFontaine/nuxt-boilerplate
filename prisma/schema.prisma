// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("NUXT_DATABASE_URL")
  extensions = [uuid_ossp(map: "uuid-ossp")]
}

enum TokenType {
  EMAIL_VERIFICATION
  PASSWORD_RESET
}

model User {
  id              String    @id @default(uuid())
  email           String    @unique
  password        String
  name            String
  emailVerified   Boolean   @default(false)
  emailVerifiedAt DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  // Relations
  posts     Post[]
  tokens    Token[]

  // Essential index only
  @@index([emailVerified])
}

model LoginAttempt {
  id             String    @id @default(uuid())
  email          String
  ipAddress      String
  attemptCount   Int       @default(1)
  blockedUntil   DateTime?
  lastAttemptAt  DateTime  @default(now())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  @@unique([email, ipAddress])
  @@index([email])
  @@index([ipAddress])
  @@index([lastAttemptAt])
}

model Token {
  id        String    @id @default(uuid())
  userId    String
  type      TokenType
  token     String    @unique
  expiresAt DateTime
  createdAt DateTime  @default(now())
  
  // Relations
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([token])
  @@index([expiresAt])
  @@index([userId, type])
}

model Post {
  id        String   @id @default(uuid())
  title     String
  content   String?
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)

  // Essential indexes only
  @@index([createdAt])
  @@index([authorId])
}

